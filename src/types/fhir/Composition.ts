// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from './BackboneElement';
import type { CodeableConcept } from './CodeableConcept';
import type { DomainResource } from './DomainResource';
import type { Identifier } from './Identifier';
import type { Narrative } from './Narrative';
import type { Period } from './Period';
import type { Reference } from './Reference';


export interface CompositionAttester extends BackboneElement {
    mode: 'personal' | 'professional' | 'legal' | 'official';
    party?: Reference<'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    time?: string;
}

export interface CompositionEvent extends BackboneElement {
    code?: CodeableConcept[];
    detail?: Reference<'Resource'>[];
    period?: Period;
}

export interface CompositionRelatesTo extends BackboneElement {
    code: 'replaces' | 'transforms' | 'signs' | 'appends';
    targetIdentifier?: Identifier;
    targetReference?: Reference<'Composition'>;
}

export interface CompositionSection extends BackboneElement {
    author?: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>[];
    code?: CodeableConcept;
    emptyReason?: CodeableConcept;
    entry?: Reference<'Resource'>[];
    focus?: Reference<'Resource'>;
    mode?: 'working' | 'snapshot' | 'changes';
    orderedBy?: CodeableConcept;
    section?: CompositionSection[];
    text?: Narrative;
    title?: string;
}

export interface Composition extends DomainResource {
    attester?: CompositionAttester[];
    author: Reference<'Device' | 'Organization' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>[];
    category?: CodeableConcept[];
    confidentiality?: 'U' | 'L' | 'M' | 'N' | 'R' | 'V';
    _confidentiality?: Element;
    custodian?: Reference<'Organization'>;
    date: string;
    _date?: Element;
    encounter?: Reference<'Encounter'>;
    event?: CompositionEvent[];
    identifier?: Identifier;
    relatesTo?: CompositionRelatesTo[];
    section?: CompositionSection[];
    status: 'preliminary' | 'final' | 'amended' | 'entered-in-error';
    _status?: Element;
    subject?: Reference<'Resource'>;
    title: string;
    _title?: Element;
    type: CodeableConcept;
}

