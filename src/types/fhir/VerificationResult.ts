// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from './BackboneElement';
import type { CodeableConcept } from './CodeableConcept';
import type { DomainResource } from './DomainResource';
import type { Reference } from './Reference';
import type { Signature } from './Signature';
import type { Timing } from './Timing';


export interface VerificationResultAttestation extends BackboneElement {
    communicationMethod?: CodeableConcept;
    date?: string;
    onBehalfOf?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
    proxyIdentityCertificate?: string;
    proxySignature?: Signature;
    sourceIdentityCertificate?: string;
    sourceSignature?: Signature;
    who?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
}

export interface VerificationResultPrimarySource extends BackboneElement {
    canPushUpdates?: CodeableConcept;
    communicationMethod?: CodeableConcept[];
    pushTypeAvailable?: CodeableConcept[];
    type?: CodeableConcept[];
    validationDate?: string;
    validationStatus?: CodeableConcept;
    who?: Reference<'Organization' | 'Practitioner' | 'PractitionerRole'>;
}

export interface VerificationResultValidator extends BackboneElement {
    attestationSignature?: Signature;
    identityCertificate?: string;
    organization: Reference<'Organization'>;
}

export interface VerificationResult extends DomainResource {
    attestation?: VerificationResultAttestation;
    failureAction?: CodeableConcept;
    frequency?: Timing;
    lastPerformed?: string;
    _lastPerformed?: Element;
    need?: CodeableConcept;
    nextScheduled?: string;
    _nextScheduled?: Element;
    primarySource?: VerificationResultPrimarySource[];
    status: 'attested' | 'validated' | 'in-process' | 'req-revalid' | 'val-fail' | 'reval-fail';
    _status?: Element;
    statusDate?: string;
    _statusDate?: Element;
    target?: Reference<'Resource'>[];
    targetLocation?: string[];
    _targetLocation?: Element;
    validationProcess?: CodeableConcept[];
    validationType?: CodeableConcept;
    validator?: VerificationResultValidator[];
}

