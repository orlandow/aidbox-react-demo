// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import type { Annotation } from './Annotation';
import type { BackboneElement } from './BackboneElement';
import type { CodeableConcept } from './CodeableConcept';
import type { DomainResource } from './DomainResource';
import type { Duration } from './Duration';
import type { Identifier } from './Identifier';
import type { Period } from './Period';
import type { Quantity } from './Quantity';
import type { Reference } from './Reference';


export interface SpecimenCollection extends BackboneElement {
    bodySite?: CodeableConcept;
    collectedDateTime?: string;
    collectedPeriod?: Period;
    collector?: Reference<'Practitioner' | 'PractitionerRole'>;
    duration?: Duration;
    fastingStatusCodeableConcept?: CodeableConcept;
    fastingStatusDuration?: Duration;
    method?: CodeableConcept;
    quantity?: Quantity;
}

export interface SpecimenContainer extends BackboneElement {
    additiveCodeableConcept?: CodeableConcept;
    additiveReference?: Reference<'Substance'>;
    capacity?: Quantity;
    description?: string;
    identifier?: Identifier[];
    specimenQuantity?: Quantity;
    type?: CodeableConcept;
}

export interface SpecimenProcessing extends BackboneElement {
    additive?: Reference<'Substance'>[];
    description?: string;
    procedure?: CodeableConcept;
    timeDateTime?: string;
    timePeriod?: Period;
}

export interface Specimen extends DomainResource {
    accessionIdentifier?: Identifier;
    collection?: SpecimenCollection;
    condition?: CodeableConcept[];
    container?: SpecimenContainer[];
    identifier?: Identifier[];
    note?: Annotation[];
    parent?: Reference<'Specimen'>[];
    processing?: SpecimenProcessing[];
    receivedTime?: string;
    _receivedTime?: Element;
    request?: Reference<'ServiceRequest'>[];
    status?: 'available' | 'unavailable' | 'unsatisfactory' | 'entered-in-error';
    _status?: Element;
    subject?: Reference<'Device' | 'Group' | 'Location' | 'Patient' | 'Substance'>;
    type?: CodeableConcept;
}

