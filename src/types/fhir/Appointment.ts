// WARNING: This file is autogenerated by FHIR Schema Codegen.
// https://github.com/fhir-schema/fhir-schema-codegen
// Any manual changes made to this file may be overwritten.

import type { BackboneElement } from './BackboneElement';
import type { CodeableConcept } from './CodeableConcept';
import type { DomainResource } from './DomainResource';
import type { Element } from './Element';
import type { Identifier } from './Identifier';
import type { Period } from './Period';
import type { Reference } from './Reference';


export interface AppointmentParticipant extends BackboneElement {
    actor?: Reference<'Device' | 'HealthcareService' | 'Location' | 'Patient' | 'Practitioner' | 'PractitionerRole' | 'RelatedPerson'>;
    period?: Period;
    required?: 'required' | 'optional' | 'information-only';
    status: 'accepted' | 'declined' | 'tentative' | 'needs-action';
    type?: CodeableConcept[];
}

export interface Appointment extends DomainResource {
    appointmentType?: CodeableConcept;
    basedOn?: Reference<'ServiceRequest'>[];
    cancelationReason?: CodeableConcept;
    comment?: string;
    _comment?: Element;
    created?: string;
    _created?: Element;
    description?: string;
    _description?: Element;
    end?: string;
    _end?: Element;
    identifier?: Identifier[];
    minutesDuration?: number;
    _minutesDuration?: Element;
    participant: AppointmentParticipant[];
    patientInstruction?: string;
    _patientInstruction?: Element;
    priority?: number;
    _priority?: Element;
    reasonCode?: CodeableConcept[];
    reasonReference?: Reference<'Condition' | 'ImmunizationRecommendation' | 'Observation' | 'Procedure'>[];
    requestedPeriod?: Period[];
    serviceCategory?: CodeableConcept[];
    serviceType?: CodeableConcept[];
    slot?: Reference<'Slot'>[];
    specialty?: CodeableConcept[];
    start?: string;
    _start?: Element;
    status: 'proposed' | 'pending' | 'booked' | 'arrived' | 'fulfilled' | 'cancelled' | 'noshow' | 'entered-in-error' | 'checked-in' | 'waitlist';
    _status?: Element;
    supportingInformation?: Reference<'Resource'>[];
}

